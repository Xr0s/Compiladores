Package simpleAdder ; 
     
Helpers 
    /* Our helpers */ 
    caracteres_permitidos = [32..126];
    all = [0 .. 0xffff];
    numero = ['0' .. '9'] ; 
   	tab = 9;
 	cr = 13; 
 	nl = 10;
 	eol = nl | cr | cr nl; 
    sp = 32; /*Espaço */
	letra = [ ['A' .. 'Z'] + ['a' .. 'z'] ] ;
    underscore = '_' ;
    verdadeiro = 'verdadeiro';
    falso = 'falso';
    
States
  normal,comment;

    
Tokens 
    {normal} tabulacao = tab;
    {normal} enter = eol;
    {normal} espaco = sp;
    {normal} branco = eol | tab | sp;
   
 /*	Palavras reservadas  */  //palavras reservadas devem vir primeiro que id para evitar conflito 
 	{normal} programa = 'programa';
 	{normal} se = 'se';
 	{normal} senao = 'senao';
 	{normal} inicio = 'inicio';
 	{normal} fim = 'fim.';
 	{normal} enquanto = 'enquanto';
 	{normal} para = 'para';
 	{normal} avalie = 'avalie';
 	{normal} caso = 'caso';
 	{normal} leia = 'leia';
 	{normal} escreva = 'escreva';
	{normal} entao = 'entao';
	{normal} faca = 'faca';
	{normal} repita = 'repita';
	{normal} ate = 'ate';
	{normal} xor = 'xor';
	{normal} de = 'de';
	{normal} passo = 'passo';
	{normal} fim_avalie = 'fim avalie';
	{normal} fim_se = 'fim se';
	{normal} fim_para = 'fim para';
	{normal} fim_enquanto = 'fim enquanto';
	
	//Reservadas com comandos
	
  	{normal} inteiro_reservada =  'inteiro';
 	{normal} real_reservada =  'real';
 	{normal} n_inteiro_reservada =  'n_inteiro';
 	{normal} n_real_reservada =  'n_real';
   	{normal} caractere_reservada = 'caractere';
   	{normal} booleano_reservada = 'booleano';
   	
  /* 	Tipos de Comentarios 		*/
  	{normal} fim_comentario = '*/';
	{normal} comentario_de_linha = '//'[[0..9]+[11..255]]*;  //tudo menos o nl
  	{normal->comment, comment}
     comment = '/*';
	{comment} comment_end = '*/';
	{comment} comment_body = [all -['*' + '/']]*;
	{comment} star = '*';
	{comment} slash = '/';    
  	
  
 /* Operadores aritmeticos*/ 
	{normal} soma = '+' ; 
    {normal} sub = '-' ;
    {normal} mult = '*';
    {normal} div = '/' ; 

/* 	Operadores relacionais */
	{normal} igual = '=';
	{normal} diferente = '<>';
	{normal} maiorig = '>=';
	{normal} menorig = '<=';
	{normal} maior = '>' ;
	{normal} menor = '<' ;
	
/* 	Simbolos			*/
	{normal} abre_colchete = '[' ;
	{normal} abre_parentese = '(' ;
	{normal} fecha_colchete = ']' ;
	{normal} fecha_parentese = ')' ;
	{normal} atribuicao = '<-' ;
    {normal} doispontos = ':' ;
	{normal} pontovirgula = ';' ;
    {normal} virgula = ',';
	{normal} abre_chave = '{';
	{normal} fecha_chave = '}';
	
/* 	Operadores boleanos 		*/
	{normal} nao = 'nao';
	{normal} ou = 'ou' ;
	{normal} e = 'e' ;
 
/*	Tipos de variaveis*/
	{normal} n_int = ('+'|) numero+;
	{normal} n_real = ('+'|) numero+ ',' numero+;
	{normal} inteiro =  ('+'|'-'|) numero+;
 	{normal} real =  ('+'|'-'|) numero+ ',' numero+ ;
   	{normal} caractere = '''caracteres_permitidos''';
   	{normal} booleano = verdadeiro | falso;
	
//	Identificadores
	{normal} id = (letra (letra | underscore | numero)* ) | (underscore (letra | underscore | numero)+) ;    

Ignored Tokens
	branco;

 Productions 
    /* Our super-simple grammar */
	program = [left]:inteiro soma [right]:inteiro pontovirgula;