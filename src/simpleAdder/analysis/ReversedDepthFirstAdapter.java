/* This file was generated by SableCC (http://www.sablecc.org/). */

package simpleAdder.analysis;

import java.util.*;
import simpleAdder.node.*;

public class ReversedDepthFirstAdapter extends AnalysisAdapter
{
    public void inStart(Start node)
    {
        defaultIn(node);
    }

    public void outStart(Start node)
    {
        defaultOut(node);
    }

    public void defaultIn(@SuppressWarnings("unused") Node node)
    {
        // Do nothing
    }

    public void defaultOut(@SuppressWarnings("unused") Node node)
    {
        // Do nothing
    }

    @Override
    public void caseStart(Start node)
    {
        inStart(node);
        node.getEOF().apply(this);
        node.getPTeste().apply(this);
        outStart(node);
    }

    public void inAValorTeste(AValorTeste node)
    {
        defaultIn(node);
    }

    public void outAValorTeste(AValorTeste node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAValorTeste(AValorTeste node)
    {
        inAValorTeste(node);
        if(node.getValor() != null)
        {
            node.getValor().apply(this);
        }
        outAValorTeste(node);
    }

    public void inAVddTeste(AVddTeste node)
    {
        defaultIn(node);
    }

    public void outAVddTeste(AVddTeste node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAVddTeste(AVddTeste node)
    {
        inAVddTeste(node);
        if(node.getBooleano() != null)
        {
            node.getBooleano().apply(this);
        }
        outAVddTeste(node);
    }

    public void inARealValor(ARealValor node)
    {
        defaultIn(node);
    }

    public void outARealValor(ARealValor node)
    {
        defaultOut(node);
    }

    @Override
    public void caseARealValor(ARealValor node)
    {
        inARealValor(node);
        if(node.getRealReservada() != null)
        {
            node.getRealReservada().apply(this);
        }
        outARealValor(node);
    }

    public void inABooleanoValor(ABooleanoValor node)
    {
        defaultIn(node);
    }

    public void outABooleanoValor(ABooleanoValor node)
    {
        defaultOut(node);
    }

    @Override
    public void caseABooleanoValor(ABooleanoValor node)
    {
        inABooleanoValor(node);
        if(node.getNao() != null)
        {
            node.getNao().apply(this);
        }
        outABooleanoValor(node);
    }
}
