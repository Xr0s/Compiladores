/* This file was generated by SableCC (http://www.sablecc.org/). */

package simpleAdder.node;

import simpleAdder.analysis.*;

@SuppressWarnings("nls")
public final class ARelRelacionais extends PRelacionais
{
    private PRelacionais _relacionais_;
    private POpRelacional _opRelacional_;
    private PExp _exp_;

    public ARelRelacionais()
    {
        // Constructor
    }

    public ARelRelacionais(
        @SuppressWarnings("hiding") PRelacionais _relacionais_,
        @SuppressWarnings("hiding") POpRelacional _opRelacional_,
        @SuppressWarnings("hiding") PExp _exp_)
    {
        // Constructor
        setRelacionais(_relacionais_);

        setOpRelacional(_opRelacional_);

        setExp(_exp_);

    }

    @Override
    public Object clone()
    {
        return new ARelRelacionais(
            cloneNode(this._relacionais_),
            cloneNode(this._opRelacional_),
            cloneNode(this._exp_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseARelRelacionais(this);
    }

    public PRelacionais getRelacionais()
    {
        return this._relacionais_;
    }

    public void setRelacionais(PRelacionais node)
    {
        if(this._relacionais_ != null)
        {
            this._relacionais_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._relacionais_ = node;
    }

    public POpRelacional getOpRelacional()
    {
        return this._opRelacional_;
    }

    public void setOpRelacional(POpRelacional node)
    {
        if(this._opRelacional_ != null)
        {
            this._opRelacional_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._opRelacional_ = node;
    }

    public PExp getExp()
    {
        return this._exp_;
    }

    public void setExp(PExp node)
    {
        if(this._exp_ != null)
        {
            this._exp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._exp_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._relacionais_)
            + toString(this._opRelacional_)
            + toString(this._exp_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._relacionais_ == child)
        {
            this._relacionais_ = null;
            return;
        }

        if(this._opRelacional_ == child)
        {
            this._opRelacional_ = null;
            return;
        }

        if(this._exp_ == child)
        {
            this._exp_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._relacionais_ == oldChild)
        {
            setRelacionais((PRelacionais) newChild);
            return;
        }

        if(this._opRelacional_ == oldChild)
        {
            setOpRelacional((POpRelacional) newChild);
            return;
        }

        if(this._exp_ == oldChild)
        {
            setExp((PExp) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
