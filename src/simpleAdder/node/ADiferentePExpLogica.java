/* This file was generated by SableCC (http://www.sablecc.org/). */

package simpleAdder.node;

import simpleAdder.analysis.*;

@SuppressWarnings("nls")
public final class ADiferentePExpLogica extends PExpLogica
{
    private PExpLogica _expLogica_;
    private PLogicaIgualdadePart _logicaIgualdadePart_;

    public ADiferentePExpLogica()
    {
        // Constructor
    }

    public ADiferentePExpLogica(
        @SuppressWarnings("hiding") PExpLogica _expLogica_,
        @SuppressWarnings("hiding") PLogicaIgualdadePart _logicaIgualdadePart_)
    {
        // Constructor
        setExpLogica(_expLogica_);

        setLogicaIgualdadePart(_logicaIgualdadePart_);

    }

    @Override
    public Object clone()
    {
        return new ADiferentePExpLogica(
            cloneNode(this._expLogica_),
            cloneNode(this._logicaIgualdadePart_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseADiferentePExpLogica(this);
    }

    public PExpLogica getExpLogica()
    {
        return this._expLogica_;
    }

    public void setExpLogica(PExpLogica node)
    {
        if(this._expLogica_ != null)
        {
            this._expLogica_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._expLogica_ = node;
    }

    public PLogicaIgualdadePart getLogicaIgualdadePart()
    {
        return this._logicaIgualdadePart_;
    }

    public void setLogicaIgualdadePart(PLogicaIgualdadePart node)
    {
        if(this._logicaIgualdadePart_ != null)
        {
            this._logicaIgualdadePart_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._logicaIgualdadePart_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._expLogica_)
            + toString(this._logicaIgualdadePart_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._expLogica_ == child)
        {
            this._expLogica_ = null;
            return;
        }

        if(this._logicaIgualdadePart_ == child)
        {
            this._logicaIgualdadePart_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._expLogica_ == oldChild)
        {
            setExpLogica((PExpLogica) newChild);
            return;
        }

        if(this._logicaIgualdadePart_ == oldChild)
        {
            setLogicaIgualdadePart((PLogicaIgualdadePart) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
