/* This file was generated by SableCC (http://www.sablecc.org/). */

package simpleAdder.node;

import simpleAdder.analysis.*;

@SuppressWarnings("nls")
public final class AVariosComandoParaSem extends PComandoParaSem
{
    private PComando _comando_;
    private TPontovirgula _pontovirgula_;
    private PComandoParaSem _comandoParaSem_;

    public AVariosComandoParaSem()
    {
        // Constructor
    }

    public AVariosComandoParaSem(
        @SuppressWarnings("hiding") PComando _comando_,
        @SuppressWarnings("hiding") TPontovirgula _pontovirgula_,
        @SuppressWarnings("hiding") PComandoParaSem _comandoParaSem_)
    {
        // Constructor
        setComando(_comando_);

        setPontovirgula(_pontovirgula_);

        setComandoParaSem(_comandoParaSem_);

    }

    @Override
    public Object clone()
    {
        return new AVariosComandoParaSem(
            cloneNode(this._comando_),
            cloneNode(this._pontovirgula_),
            cloneNode(this._comandoParaSem_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAVariosComandoParaSem(this);
    }

    public PComando getComando()
    {
        return this._comando_;
    }

    public void setComando(PComando node)
    {
        if(this._comando_ != null)
        {
            this._comando_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._comando_ = node;
    }

    public TPontovirgula getPontovirgula()
    {
        return this._pontovirgula_;
    }

    public void setPontovirgula(TPontovirgula node)
    {
        if(this._pontovirgula_ != null)
        {
            this._pontovirgula_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._pontovirgula_ = node;
    }

    public PComandoParaSem getComandoParaSem()
    {
        return this._comandoParaSem_;
    }

    public void setComandoParaSem(PComandoParaSem node)
    {
        if(this._comandoParaSem_ != null)
        {
            this._comandoParaSem_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._comandoParaSem_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._comando_)
            + toString(this._pontovirgula_)
            + toString(this._comandoParaSem_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._comando_ == child)
        {
            this._comando_ = null;
            return;
        }

        if(this._pontovirgula_ == child)
        {
            this._pontovirgula_ = null;
            return;
        }

        if(this._comandoParaSem_ == child)
        {
            this._comandoParaSem_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._comando_ == oldChild)
        {
            setComando((PComando) newChild);
            return;
        }

        if(this._pontovirgula_ == oldChild)
        {
            setPontovirgula((TPontovirgula) newChild);
            return;
        }

        if(this._comandoParaSem_ == oldChild)
        {
            setComandoParaSem((PComandoParaSem) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
