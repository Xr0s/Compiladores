/* This file was generated by SableCC (http://www.sablecc.org/). */

package simpleAdder.node;

import simpleAdder.analysis.*;

@SuppressWarnings("nls")
public final class AVariaveisDeclaracao extends PDeclaracao
{
    private PTipo _tipo_;
    private PDeclVariavel _declVariavel_;

    public AVariaveisDeclaracao()
    {
        // Constructor
    }

    public AVariaveisDeclaracao(
        @SuppressWarnings("hiding") PTipo _tipo_,
        @SuppressWarnings("hiding") PDeclVariavel _declVariavel_)
    {
        // Constructor
        setTipo(_tipo_);

        setDeclVariavel(_declVariavel_);

    }

    @Override
    public Object clone()
    {
        return new AVariaveisDeclaracao(
            cloneNode(this._tipo_),
            cloneNode(this._declVariavel_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAVariaveisDeclaracao(this);
    }

    public PTipo getTipo()
    {
        return this._tipo_;
    }

    public void setTipo(PTipo node)
    {
        if(this._tipo_ != null)
        {
            this._tipo_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tipo_ = node;
    }

    public PDeclVariavel getDeclVariavel()
    {
        return this._declVariavel_;
    }

    public void setDeclVariavel(PDeclVariavel node)
    {
        if(this._declVariavel_ != null)
        {
            this._declVariavel_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._declVariavel_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._tipo_)
            + toString(this._declVariavel_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._tipo_ == child)
        {
            this._tipo_ = null;
            return;
        }

        if(this._declVariavel_ == child)
        {
            this._declVariavel_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._tipo_ == oldChild)
        {
            setTipo((PTipo) newChild);
            return;
        }

        if(this._declVariavel_ == oldChild)
        {
            setDeclVariavel((PDeclVariavel) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
