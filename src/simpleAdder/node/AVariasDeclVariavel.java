/* This file was generated by SableCC (http://www.sablecc.org/). */

package simpleAdder.node;

import simpleAdder.analysis.*;

@SuppressWarnings("nls")
public final class AVariasDeclVariavel extends PDeclVariavel
{
    private TVirgula _virgula_;
    private PDeclVariavel _declVariavel_;

    public AVariasDeclVariavel()
    {
        // Constructor
    }

    public AVariasDeclVariavel(
        @SuppressWarnings("hiding") TVirgula _virgula_,
        @SuppressWarnings("hiding") PDeclVariavel _declVariavel_)
    {
        // Constructor
        setVirgula(_virgula_);

        setDeclVariavel(_declVariavel_);

    }

    @Override
    public Object clone()
    {
        return new AVariasDeclVariavel(
            cloneNode(this._virgula_),
            cloneNode(this._declVariavel_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAVariasDeclVariavel(this);
    }

    public TVirgula getVirgula()
    {
        return this._virgula_;
    }

    public void setVirgula(TVirgula node)
    {
        if(this._virgula_ != null)
        {
            this._virgula_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._virgula_ = node;
    }

    public PDeclVariavel getDeclVariavel()
    {
        return this._declVariavel_;
    }

    public void setDeclVariavel(PDeclVariavel node)
    {
        if(this._declVariavel_ != null)
        {
            this._declVariavel_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._declVariavel_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._virgula_)
            + toString(this._declVariavel_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._virgula_ == child)
        {
            this._virgula_ = null;
            return;
        }

        if(this._declVariavel_ == child)
        {
            this._declVariavel_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._virgula_ == oldChild)
        {
            setVirgula((TVirgula) newChild);
            return;
        }

        if(this._declVariavel_ == oldChild)
        {
            setDeclVariavel((PDeclVariavel) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
