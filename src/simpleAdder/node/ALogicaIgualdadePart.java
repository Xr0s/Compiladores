/* This file was generated by SableCC (http://www.sablecc.org/). */

package simpleAdder.node;

import simpleAdder.analysis.*;

@SuppressWarnings("nls")
public final class ALogicaIgualdadePart extends PLogicaIgualdadePart
{
    private TAbreParentese _l_;
    private PExp _esq_;
    private PIgualOp _igualOp_;
    private PExp _dir_;
    private TFechaParentese _fechaParentese_;

    public ALogicaIgualdadePart()
    {
        // Constructor
    }

    public ALogicaIgualdadePart(
        @SuppressWarnings("hiding") TAbreParentese _l_,
        @SuppressWarnings("hiding") PExp _esq_,
        @SuppressWarnings("hiding") PIgualOp _igualOp_,
        @SuppressWarnings("hiding") PExp _dir_,
        @SuppressWarnings("hiding") TFechaParentese _fechaParentese_)
    {
        // Constructor
        setL(_l_);

        setEsq(_esq_);

        setIgualOp(_igualOp_);

        setDir(_dir_);

        setFechaParentese(_fechaParentese_);

    }

    @Override
    public Object clone()
    {
        return new ALogicaIgualdadePart(
            cloneNode(this._l_),
            cloneNode(this._esq_),
            cloneNode(this._igualOp_),
            cloneNode(this._dir_),
            cloneNode(this._fechaParentese_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseALogicaIgualdadePart(this);
    }

    public TAbreParentese getL()
    {
        return this._l_;
    }

    public void setL(TAbreParentese node)
    {
        if(this._l_ != null)
        {
            this._l_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._l_ = node;
    }

    public PExp getEsq()
    {
        return this._esq_;
    }

    public void setEsq(PExp node)
    {
        if(this._esq_ != null)
        {
            this._esq_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._esq_ = node;
    }

    public PIgualOp getIgualOp()
    {
        return this._igualOp_;
    }

    public void setIgualOp(PIgualOp node)
    {
        if(this._igualOp_ != null)
        {
            this._igualOp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._igualOp_ = node;
    }

    public PExp getDir()
    {
        return this._dir_;
    }

    public void setDir(PExp node)
    {
        if(this._dir_ != null)
        {
            this._dir_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._dir_ = node;
    }

    public TFechaParentese getFechaParentese()
    {
        return this._fechaParentese_;
    }

    public void setFechaParentese(TFechaParentese node)
    {
        if(this._fechaParentese_ != null)
        {
            this._fechaParentese_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._fechaParentese_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._l_)
            + toString(this._esq_)
            + toString(this._igualOp_)
            + toString(this._dir_)
            + toString(this._fechaParentese_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._l_ == child)
        {
            this._l_ = null;
            return;
        }

        if(this._esq_ == child)
        {
            this._esq_ = null;
            return;
        }

        if(this._igualOp_ == child)
        {
            this._igualOp_ = null;
            return;
        }

        if(this._dir_ == child)
        {
            this._dir_ = null;
            return;
        }

        if(this._fechaParentese_ == child)
        {
            this._fechaParentese_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._l_ == oldChild)
        {
            setL((TAbreParentese) newChild);
            return;
        }

        if(this._esq_ == oldChild)
        {
            setEsq((PExp) newChild);
            return;
        }

        if(this._igualOp_ == oldChild)
        {
            setIgualOp((PIgualOp) newChild);
            return;
        }

        if(this._dir_ == oldChild)
        {
            setDir((PExp) newChild);
            return;
        }

        if(this._fechaParentese_ == oldChild)
        {
            setFechaParentese((TFechaParentese) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
