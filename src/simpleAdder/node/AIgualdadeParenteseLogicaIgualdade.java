/* This file was generated by SableCC (http://www.sablecc.org/). */

package simpleAdder.node;

import simpleAdder.analysis.*;

@SuppressWarnings("nls")
public final class AIgualdadeParenteseLogicaIgualdade extends PLogicaIgualdade
{
    private PLogicaIgualdade _logicaIgualdade_;
    private PIgualOp _l_;
    private TAbreParentese _abreParentese_;
    private PExp _esq_;
    private PIgualOp _r_;
    private PExp _dir_;
    private TFechaParentese _fechaParentese_;

    public AIgualdadeParenteseLogicaIgualdade()
    {
        // Constructor
    }

    public AIgualdadeParenteseLogicaIgualdade(
        @SuppressWarnings("hiding") PLogicaIgualdade _logicaIgualdade_,
        @SuppressWarnings("hiding") PIgualOp _l_,
        @SuppressWarnings("hiding") TAbreParentese _abreParentese_,
        @SuppressWarnings("hiding") PExp _esq_,
        @SuppressWarnings("hiding") PIgualOp _r_,
        @SuppressWarnings("hiding") PExp _dir_,
        @SuppressWarnings("hiding") TFechaParentese _fechaParentese_)
    {
        // Constructor
        setLogicaIgualdade(_logicaIgualdade_);

        setL(_l_);

        setAbreParentese(_abreParentese_);

        setEsq(_esq_);

        setR(_r_);

        setDir(_dir_);

        setFechaParentese(_fechaParentese_);

    }

    @Override
    public Object clone()
    {
        return new AIgualdadeParenteseLogicaIgualdade(
            cloneNode(this._logicaIgualdade_),
            cloneNode(this._l_),
            cloneNode(this._abreParentese_),
            cloneNode(this._esq_),
            cloneNode(this._r_),
            cloneNode(this._dir_),
            cloneNode(this._fechaParentese_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAIgualdadeParenteseLogicaIgualdade(this);
    }

    public PLogicaIgualdade getLogicaIgualdade()
    {
        return this._logicaIgualdade_;
    }

    public void setLogicaIgualdade(PLogicaIgualdade node)
    {
        if(this._logicaIgualdade_ != null)
        {
            this._logicaIgualdade_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._logicaIgualdade_ = node;
    }

    public PIgualOp getL()
    {
        return this._l_;
    }

    public void setL(PIgualOp node)
    {
        if(this._l_ != null)
        {
            this._l_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._l_ = node;
    }

    public TAbreParentese getAbreParentese()
    {
        return this._abreParentese_;
    }

    public void setAbreParentese(TAbreParentese node)
    {
        if(this._abreParentese_ != null)
        {
            this._abreParentese_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._abreParentese_ = node;
    }

    public PExp getEsq()
    {
        return this._esq_;
    }

    public void setEsq(PExp node)
    {
        if(this._esq_ != null)
        {
            this._esq_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._esq_ = node;
    }

    public PIgualOp getR()
    {
        return this._r_;
    }

    public void setR(PIgualOp node)
    {
        if(this._r_ != null)
        {
            this._r_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._r_ = node;
    }

    public PExp getDir()
    {
        return this._dir_;
    }

    public void setDir(PExp node)
    {
        if(this._dir_ != null)
        {
            this._dir_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._dir_ = node;
    }

    public TFechaParentese getFechaParentese()
    {
        return this._fechaParentese_;
    }

    public void setFechaParentese(TFechaParentese node)
    {
        if(this._fechaParentese_ != null)
        {
            this._fechaParentese_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._fechaParentese_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._logicaIgualdade_)
            + toString(this._l_)
            + toString(this._abreParentese_)
            + toString(this._esq_)
            + toString(this._r_)
            + toString(this._dir_)
            + toString(this._fechaParentese_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._logicaIgualdade_ == child)
        {
            this._logicaIgualdade_ = null;
            return;
        }

        if(this._l_ == child)
        {
            this._l_ = null;
            return;
        }

        if(this._abreParentese_ == child)
        {
            this._abreParentese_ = null;
            return;
        }

        if(this._esq_ == child)
        {
            this._esq_ = null;
            return;
        }

        if(this._r_ == child)
        {
            this._r_ = null;
            return;
        }

        if(this._dir_ == child)
        {
            this._dir_ = null;
            return;
        }

        if(this._fechaParentese_ == child)
        {
            this._fechaParentese_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._logicaIgualdade_ == oldChild)
        {
            setLogicaIgualdade((PLogicaIgualdade) newChild);
            return;
        }

        if(this._l_ == oldChild)
        {
            setL((PIgualOp) newChild);
            return;
        }

        if(this._abreParentese_ == oldChild)
        {
            setAbreParentese((TAbreParentese) newChild);
            return;
        }

        if(this._esq_ == oldChild)
        {
            setEsq((PExp) newChild);
            return;
        }

        if(this._r_ == oldChild)
        {
            setR((PIgualOp) newChild);
            return;
        }

        if(this._dir_ == oldChild)
        {
            setDir((PExp) newChild);
            return;
        }

        if(this._fechaParentese_ == oldChild)
        {
            setFechaParentese((TFechaParentese) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
